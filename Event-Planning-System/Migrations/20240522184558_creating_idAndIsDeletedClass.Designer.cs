// <auto-generated />
using System;
using Event_Planinng_System_DAL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Event_Planning_System.Migrations
{
    [DbContext(typeof(dbContext))]
    [Migration("20240522184558_creating_idAndIsDeletedClass")]
    partial class creating_idAndIsDeletedClass
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Event_Planinng_System_DAL.Models.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("Event_Planinng_System_DAL.Models.Comments", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CommentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Event_Planinng_System_DAL.Models.Emails", b =>
                {
                    b.Property<string>("type")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subject")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("type", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("Event_Planinng_System_DAL.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AttendanceNumber")
                        .HasColumnType("int");

                    b.Property<int?>("Budget")
                        .HasColumnType("int");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DateOfCreation")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleMapsLocation")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Event_Planinng_System_DAL.Models.EventImages", b =>
                {
                    b.Property<string>("EventImage")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.HasKey("EventImage", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("EventsImages");
                });

            modelBuilder.Entity("Event_Planinng_System_DAL.Models.Invite", b =>
                {
                    b.Property<int>("AttendantId")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<bool>("IsSent")
                        .HasColumnType("bit");

                    b.HasKey("AttendantId", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("Invites");
                });

            modelBuilder.Entity("Event_Planinng_System_DAL.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Event_Planinng_System_DAL.Models.ToDoList", b =>
                {
                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DeadLineTime")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ToDoListBudget")
                        .HasColumnType("int");

                    b.HasKey("Title", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("ToDoLists");
                });

            modelBuilder.Entity("Event_Planinng_System_DAL.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Street")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Event_Planinng_System_DAL.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Event_Planinng_System_DAL.Models.Comments", b =>
                {
                    b.HasOne("Event_Planinng_System_DAL.Models.Event", "EventNavigation")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Event_Planinng_System_DAL.Models.User", "UserNavigation")
                        .WithMany("CommentsNavigation")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EventNavigation");

                    b.Navigation("UserNavigation");
                });

            modelBuilder.Entity("Event_Planinng_System_DAL.Models.Emails", b =>
                {
                    b.HasOne("Event_Planinng_System_DAL.Models.Event", "EventEmailsNavigation")
                        .WithMany("EventEmailsNavigation")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventEmailsNavigation");
                });

            modelBuilder.Entity("Event_Planinng_System_DAL.Models.Event", b =>
                {
                    b.HasOne("Event_Planinng_System_DAL.Models.User", "CreatorNavigation")
                        .WithMany("CreateEventNavigation")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatorNavigation");
                });

            modelBuilder.Entity("Event_Planinng_System_DAL.Models.EventImages", b =>
                {
                    b.HasOne("Event_Planinng_System_DAL.Models.Event", "EventNavigation")
                        .WithMany("EventImagesNavigation")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventNavigation");
                });

            modelBuilder.Entity("Event_Planinng_System_DAL.Models.Invite", b =>
                {
                    b.HasOne("Event_Planinng_System_DAL.Models.Attendance", "AttendaceNavigation")
                        .WithMany("EventInviteNavigation")
                        .HasForeignKey("AttendantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Event_Planinng_System_DAL.Models.Event", "EventNavigation")
                        .WithMany("PeopleInvitesNavigation")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttendaceNavigation");

                    b.Navigation("EventNavigation");
                });

            modelBuilder.Entity("Event_Planinng_System_DAL.Models.ToDoList", b =>
                {
                    b.HasOne("Event_Planinng_System_DAL.Models.Event", "EventNavigation")
                        .WithMany("ToDoListsNavigation")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventNavigation");
                });

            modelBuilder.Entity("Event_Planinng_System_DAL.Models.UserRole", b =>
                {
                    b.HasOne("Event_Planinng_System_DAL.Models.Role", "RoleNavigation")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Event_Planinng_System_DAL.Models.User", "UserNavigation")
                        .WithMany("UserRoleNavigation")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoleNavigation");

                    b.Navigation("UserNavigation");
                });

            modelBuilder.Entity("Event_Planinng_System_DAL.Models.Attendance", b =>
                {
                    b.Navigation("EventInviteNavigation");
                });

            modelBuilder.Entity("Event_Planinng_System_DAL.Models.Event", b =>
                {
                    b.Navigation("EventEmailsNavigation");

                    b.Navigation("EventImagesNavigation");

                    b.Navigation("PeopleInvitesNavigation");

                    b.Navigation("ToDoListsNavigation");
                });

            modelBuilder.Entity("Event_Planinng_System_DAL.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Event_Planinng_System_DAL.Models.User", b =>
                {
                    b.Navigation("CommentsNavigation");

                    b.Navigation("CreateEventNavigation");

                    b.Navigation("UserRoleNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
